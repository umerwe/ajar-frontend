import type React from "react"
import type { Metadata } from "next"
import "./globals.css"
import Providers from "@/components/providers/provider"
import { hasLocale } from "next-intl"
import { notFound } from "next/navigation"
import { routing } from "@/i18n/routing"

import { QueryClient, dehydrate } from "@tanstack/react-query"

// const poppins = Poppins({
//   subsets: ["latin"],
//   weight: ["400", "500", "600", "700"],
//   variable: "--font-poppins",
//   display: "swap",
// })

export const metadata: Metadata = {
  title: "Home | AJAR",
  description: "Generated by create next app",
}

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode
  params: Promise<{ locale: string }>
}) {
  const { locale } = await params
  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }
  const messages = (await import(`../../../messages/${locale}.json`)).default

  // Create QueryClient and prefetch data on server
  const queryClient = new QueryClient({
    defaultOptions: {
      queries: {
        staleTime: 60 * 1000, // 1 minute
      },
    },
  })

  const dehydratedState = dehydrate(queryClient)

  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={`font-sans`}>
        <Providers locale={locale} messages={messages} dehydratedState={dehydratedState}>
          <main className="flex-1">{children}</main>
        </Providers>
      </body>
    </html>
  )
}